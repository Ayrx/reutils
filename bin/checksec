#!/usr/bin/env python3

import click
import lief


@click.command(
    help="Check the security properties of a binary file."
)
@click.argument("bin", type=click.Path(exists=True))
def cli(bin):
    bin_parsed = lief.parse(bin)

    if bin_parsed.format == lief.EXE_FORMATS.ELF:
        bin_format = "ELF"
    elif bin_parsed.format == lief.EXE_FORMATS.PE:
        bin_format = "PE"
    elif bin_parsed.format == lief.EXE_FORMATS.MACHO:
        bin_format = "Mach-O"
    else:
        click.echo("Unknown format detected. Exiting.")
        return

    click.echo("{} is a {} binary.".format(bin, bin_format))
    click.echo()

    click.echo("Exploit mitigations:")
    click.echo("PIE:\t\t\t{}".format("YES" if bin_parsed.is_pie else "NO"))
    click.echo("NX:\t\t\t{}".format("YES" if bin_parsed.has_nx else "NO"))

    bin_concrete = bin_parsed.concrete

    if bin_format == "ELF":
        if bin_concrete.has(lief.ELF.SEGMENT_TYPES.GNU_RELRO):
            relro = "PARTIAL"
            if bin_concrete.has(lief.ELF.DYNAMIC_TAGS.BIND_NOW):
                relro = "FULL"
        else:
            relro = "NO"
        click.echo("RELRO:\t\t\t{}".format(relro))

        click.echo("Stack Canary:\t\t{}".format(
            "YES" if bin_concrete.has_symbol("__stack_chk_fail") else "NO"))

        if bin_concrete.has(lief.ELF.DYNAMIC_TAGS.RUNPATH):
            runpath = bin_concrete.get(lief.ELF.DYNAMIC_TAGS.RUNPATH).runpath
        else:
            runpath = "NONE"
        click.echo("RUNPATH:\t\t{}".format(runpath))

        if bin_concrete.has(lief.ELF.DYNAMIC_TAGS.RPATH):
            rpath = bin_concrete.get(lief.ELF.DYNAMIC_TAGS.RPATH).rpath
        else:
            rpath = "NONE"
        click.echo("RPATH:\t\t\t{}".format(rpath))

    if bin_format == "PE":
        header = bin_concrete.optional_header
        click.echo("SEH:\t\t\t{}".format(
            "NO" if lief.PE.DLL_CHARACTERISTICS.NO_SEH in
            header.dll_characteristics_lists else "YES"
        ))

        click.echo("Force Integrity:\t{}".format(
            "YES" if lief.PE.DLL_CHARACTERISTICS.FORCE_INTEGRITY in
            header.dll_characteristics_lists else "NO"
        ))


if __name__ == "__main__":
    cli()
